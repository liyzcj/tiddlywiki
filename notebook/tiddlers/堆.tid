created: 20200505124905840
modified: 20200627073307857
tags: DataStructure TODO
title: 堆
type: text/vnd.tiddlywiki

! 堆

!! 性质

堆是具有一下性质的二叉树：

* 堆一定是''完全二叉树''
* 父节点与子节点之间存在''顺序''

堆又分为两种：

* 父节点总是大于等于子节点，称为''大顶堆''
* 父节点总是小于等于子节点，称为''小顶堆''

由于堆为完全二叉树，所以通常使用二叉树的[[顺序表示法|二叉树]]，即申请数组空间为 $$n+1$$，并将索引 `0` 丢弃不用。那么，就可以用 Upper 与 Low `heap(l, u)` 来表示一个堆，堆就符合以下公式：$$\forall_{2l\le i \le u} x[\frac{i}{2}]\le x[i]$$，即，''除跟节点之外的所有节点，都大于等于它的父节点''。（大顶堆相反）

!! 使用

堆通常有两种用法：

# ''排序''。采用堆排序对 n 元数组排序，时间复杂度不会超过 $$O(nlogn)$$，且只需要额外几个字节的空间。（因为堆可以进行''原地''排序，利用''元素交换''来完成）
# ''优先级队列''。由于堆的天生性质，最小的（或者最大的）树一定在堆顶，所以用来从堆中提取最高或最低优先级都非常简单。无论是''提取''还是''插入''操作都不会超过 $$O(nlogn)$$ 的复杂度