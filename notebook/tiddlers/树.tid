caption: 树 Tree
created: 20200404195318491
modified: 20200506034711295
tags: DataStructure ADT
title: 树
type: text/vnd.tiddlywiki

在计算机科学中，树 (tree) 是一种 [[抽象数据模型|ADT]] 或者是实现这种模型的 [[数据结构|DataStructure]]，用来模拟具有树状结构性质的数据集合。

''数学定义上，它是由 $$n（n>0）$$ 个有限节点组成一个具有层次关系的集合。''

> 把它叫做“树”是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。

树🌲结构是计算机程序中非常常用的数据结构，树结构也有许多不同的种类：

* ''无序树''：树中的节点之间没有顺序关系，也称为''自由树''。
* ''有序树''：树中任意节点的子节点之间有顺序关系。


<div class="tc-table-of-contents">

<$macrocall $name="toc-selective-expandable" tag={{!!title}}/>

</div>



!! 树结构的特点


* 每个节点都只有有限个子节点或无子节点；
* 没有父节点的节点称为根节点；
* 每一个非根节点有且只有一个父节点；
* 除了根节点外，每个子节点可以分为多个不相交的子树；
* 树里面没有环路 (cycle)

!! 术语


|!中文|!英文|!解释|
|''节点''|''Node''|树中的单个节点，单独的数据结构|
|''根节点''|''Root Node''|树中最高的节点，Prime Ancestor|
|''孩子节点''|''Child''|Immidiate Descendant|
|''双亲节点''|''Parent''|Immidiate Ancestor|
|''兄弟节点''|''Siblings''|有同一个父节点的一组节点|
|''相邻节点''|''Neighbor''|父节点或孩子节点|
|''后代节点''|''Descendant''|一个节点的所有子孙|
|''祖先节点''|''Ancestor''|一个节点的所有祖先|
|''叶子节点''|''Leaf''|没有孩子节点的节点|
|''分支节点''|''Branch Node''|有孩子节点但不是父节点的节点|
|''度''|''Degree''|一个节点的孩子个数|
|''树的度''|''Degree of Tree''|根节点的孩子个数|
|''边''|''Edge''|两个节点之间的连线|
|''路径''|''Path''|一个节点到另一个节点之间的边和节点的数组|
|''距离''|''Distance''|两个节点之间最短路径的边数|
|''深度''|''Depth''|节点到根节点的距离|
|''层''|''Level''|深度 + 1|
|''高度''|''Height''|一个节点到它子孙中的叶子节点的最长距离|
|''宽度''|''Width''|一个层中的节点个数|
|''阔度''|''Breadth''|叶子节点的个数|
|''树的高度''|''Height of Tree''|根节点的高度|
|''森林''|''Forest''|一组不相交的树|
|''子树''|''Sub Tree''|一个树的子集|
|''有序树''|''Ordered Tree''|树中的元素是有顺序的|
|''树的大小''|''Size of Tree''|所有节点的个数|



