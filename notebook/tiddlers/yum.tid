caption: RedHat/Centos/Suse 包管理工具 yum
created: 20190830055452461
modified: 20200615105115994
tags: PackageManagement
title: yum
type: text/vnd.tiddlywiki

! yum
---

YUM ( Yellow Dog Updater) 是 Fedora 的包管理工具，基于 [[rpm]] 构建。

!! 安装

```bash
yum install  软件名            //用YUM安装指定软件包
yum remove  软件名           //用YUM删除指定软件包
yum localinstall RPM包文件   //使用YUM方式安装本地RPM包
yum groupinstall <分组名称>   //安装指定分组内所有软件
yum groupremove packagegroup <分组名称> //删除指定分组内所有软件
```

> 注意：install、localinstall的区别：使用install时，指定的软件包将从YUM服务器下载并安装，而localinstall指定的软件使用RPM包安装，而依赖关系所需的包在YUM服务器下载安装


!! 查询

```bash
yum check-update          //列出所有可更新的软件清单
yum -y update <软件名>    //升级指定的软件包
yum upgrade //大规模的版本升级,与yum update不同的是,连旧的淘汰的包也升级
yum groupupdate  <分组名称> //更新指定软件组中的软件包
yum info   软件名         //显示指定软件包相关信息
yum info updates           //显示所有可以更新的软件包的信息
yum info installed          //显示所有已经安装的软件包的信息
yum info extras       //显示所有已经安装但不在YUM 仓库内的软件包信息
yum groupinfo <分组名称> //显示指定分组的信息
yum list                   //列出所有已经安装和可以安装的软件
yum list  <regex>    //列出资源库中与正则表达式匹配的可以安装或更新以及已经安装的rpm包
yum list  软件名         //列出指定的软件包的安装情况
yum list  available         //列出资源库中所有可以安装的rpm包
yum list  available <regex> //列出资源库中与正则表达式匹配的所有可以安装的rpm包
yum list installed          //列出所有已经安装的软件包
yum list  installed <regex>  //列出资源库中与正则表达式匹配的所有已经安装的rpm包
yum list extras          //列出所有已经安装但不在YUM 仓库内的软件包
yum list extras <regex>//列出与正则表达式匹配的已安装的但不包含在资源库中的rpm包
yum grouplist              //列出所有YUM服务器定义的分组
yum search <关键字>      //在YUM源中查找指定关键字
yum search <regex>       //检测所有可用的软件的名称、描述、概述和已列出的维护者，查找与正则表达式匹配的值
yum list  recent           //列出最近被添加到资源库中的软件包
yum provides <regex>      //检测软件包中包含的文件以及软件提供的功能，查找与正则表达式匹配的值
```

!! 缓存机制

yum会把下载的软件包和header存储在cache中，而不会自动删除。

```bash
yum clean packages     //清除缓存目录(/var/cache/yum)下的软件包
yum clean headers      //清除缓存目录(/var/cache/yum)下的 headers
yum clean oldheaders   //清除缓存目录(/var/cache/yum)下旧的 headers
yum clean all     //清除缓存目录(/var/cache/yum)下的软件包及旧的headers
yum clean     //同上，清除缓存目录(/var/cache/yum)下的软件包及旧的headers
yum makecache //生成缓存
```
* 清除yum机制的本地缓存 <div>

	目的:避免更换源后出现HTTP ERORR 404-Not Found Trying 
</div>

* 生成yum机制的本地缓存 <div>

目的:将服务器上的软件包信息在本地缓存,以提高搜索安装软件的速度。
</div>