created: 20200515080932506
modified: 20200515081945924
tags: [[Log4j and Log4j 2]] Migrated
title: NDC MDC
type: text/vnd.tiddlywiki

!! Intro

''NDC (Nested Diagnostic Context)'' 和 ''MDC (Mapped Diagnostic Context)'' 是 [[log4j|Log4j and Log4j 2]] 种非常有用的两个类，它们用于存储应用程序的上下文信息（context infomation），从而便于在 log 中使用这些上下文信息。

!!! NDC


NDC 采用了一个类似''栈''的机制来 push 和 pop 上下文信息，每一个线程都独立地储存上下文信息。比如说一个 servlet 就可以针对每一个 request 创建对应的NDC，储存客户端地址等等信息。

当使用的时候，我们要尽可能确保在进入一个 context 的时候，把相关的信息使用 `NDC.push(message)`; 在离开这个 context 的时候使用 `NDC.pop()` 将信息删除。另外由于设计上的一些问题，还需要保证在当前 thread ''结束的时候使用 `NDC.remove()` 清除内存，否则会产生内存泄漏的问题。''

> 存储了上下文信息之后，我们就可以在 log 的时候将信息输出。在相应的 Pattern Layout 中使用 `%x` 来输出存储的上下文信息

!!! MDC

MDC 和 NDC 非常相似，所不同的是 MDC 内部使用了''类似 map 的机制''来存储信息，上下文信息也是每个线程独立地储存，所不同的是信息都是以它们的 key 值存储在 map 中。相对应的方法，`MDC.put(key, value)`; `MDC.remove(key)`; `MDC.get(key)`; 在配置 Pattern Layout 的时候使用：`%X{key}` 来输出对应的 value。

<<note "这里需要注意的一点，MDC 是''线程独立''的，但是一个''子线程会自动获得一个父线程 MDC 的 copy。''">>